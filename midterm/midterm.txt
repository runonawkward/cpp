/**
 * Title: Grade Histogram
 * Author: William Walter
 * Date: 10/26/2016
 * Purpose: Analyze an array of grades and display a histogram of the grades.
**/
#include <stdio.h>
int main()
{
  //populate with provided data
  char grade[32] = {
     'A', 'B', 'C', 'D', 'f', 'I', \
     'b', 'C', 'd', 'F', 'I', 'a', \
     'C', 'D', 'F', 'I', 'A', 'B', \
     'D', 'F', 'I', 'A', 'B', 'c', \
     'I' , 'D', 'F', 'F', 'A', 'B',\
     'a', 'b' \
  };
  
  int hist_grades[6] = {0};

  //loop through grades to populate histogram array
  for ( int index = 0; index < sizeof(grade)/sizeof(grade[0]); ++index)
  {
    //normalize values for a shorter switch
    if(grade[index] >= 'a')
      grade[index] = grade[index] - 32;

    //switch on grade value I = 5
    switch(grade[index])
    {
      case 'A':
        ++hist_grades[0];
        continue;
      case 'B':
        ++hist_grades[1];
        continue;
      case 'C':
        ++hist_grades[2];
        continue;
      case 'D':
        ++hist_grades[3];
        continue;
      case 'F':
        ++hist_grades[4];
        continue;
      case 'I':
        ++hist_grades[5];
        continue;
      //ignore input other than A-F or I
      default:
        continue;
    }
  }
   //print histogram table 
   printf("Grade\t Frequency\n--------------------\n");
   for(int index = 0; index < sizeof(hist_grades)/sizeof(hist_grades[0]); ++index)
   {
     //convert index to A-F or I
     char cur_grade = index;
     if( index != 5)
        cur_grade += 65;
     else
        cur_grade = 'I';
        
     printf("%3c\t%6d\n", cur_grade, hist_grades[index]);
    }
}

Grade	 Frequency
--------------------
  A	     6
  B	     6
  C	     4
  D	     5
  E	     6
  I	     5


/**
 * Title: Shift and Transpose
 * Author: William Walter
 * Date: 10/26/2016
 * Purpose: Populate rows 2-8 of a [8][10] matrix 
 * with the values literally shifted to the right
 * of the previous row, wrapping values to the start.
 * Then transpose that matrix
 * into a [10][8] matrix
**/
#include <stdio.h>
int main()
{
  //initialize the first row of the matrix
  int matrixA[8][10] = {1,2,3,4,5,6,7,8,9,10};

  //fill the rest of the rows
  for( int i = 1; i < 8; ++i )
  {
    for (int j = 0; j < 10; ++j)
    {
      //loop through j indexes 10 1 2 3 4 5 etc.
      matrixA[i][j] = matrixA[i-1][(j+9)%10];
    }
  }

  //print the populated matrix
  for( int i = 0; i < 8; ++i )
  {
    for (int j = 0; j < 10; ++j)
    {
      printf("%d ", matrixA[i][j]);
    }
    printf("\n");
  }

  //define transpose matrix
  int matrixB[10][8];
  for ( int i = 0; i < 10; ++i)
  {
    for ( int j = 0; j < 8; ++j)
    {
      //populate and print transpose matrix
      matrixB[i][j] = matrixA[j][i];
      printf("%d ", matrixB[i][j]);
    }
    printf("\n");
  }
  return 0;
}

1 2 3 4 5 6 7 8 9 10 
10 1 2 3 4 5 6 7 8 9 
9 10 1 2 3 4 5 6 7 8 
8 9 10 1 2 3 4 5 6 7 
7 8 9 10 1 2 3 4 5 6 
6 7 8 9 10 1 2 3 4 5 
5 6 7 8 9 10 1 2 3 4 
4 5 6 7 8 9 10 1 2 3 
1 10 9 8 7 6 5 4 
2 1 10 9 8 7 6 5 
3 2 1 10 9 8 7 6 
4 3 2 1 10 9 8 7 
5 4 3 2 1 10 9 8 
6 5 4 3 2 1 10 9 
7 6 5 4 3 2 1 10 
8 7 6 5 4 3 2 1 
9 8 7 6 5 4 3 2 
10 9 8 7 6 5 4 3 

/**
 * Title: Fib Sum
 * Author: William Walter
 * Date: 10/26/2016
 * Purpose: Calculate the sum of the first fibonnaci numbers**/
#include <stdio.h>
int fib(int n);
void fibonnaci(int fibs[],int size);
int sum(int fibs[], int size);
int main()
{
  int fibs[21];
  int size = 21; 
  fibonnaci(fibs,size);
  printf("Fibonnaci Numbers\nN\tValue\n-------------\n");
  for (int i = 0; i < size; ++i)
    printf("%-2d\t%d\n", i, fibs[i]);
  int total = sum(fibs,size);
  printf("The sum of the first 10 fibonnaci numbers is: %d\n", total);
}
int fib(n)
{
  if (n >= 2)
    return fib(n-1) + fib(n-2);
  else if (n == 1)
    return 1;
  else
    return 0;
}
void fibonnaci(int fibs[],int size)
{
  for(int i = 0; i < size; ++i)
  {
    fibs[i] = fib(i);
  }
}
int sum(int fibs[], int size)
{
  int sum = 0;
  for(int i = 0; i < size; ++i)
  {
    sum += fibs[i];
  }
  return sum;
}

Fibonnaci Numbers
N	Value
-------------
0 	0
1 	1
2 	1
3 	2
4 	3
5 	5
6 	8
7 	13
8 	21
9 	34
10	55
11	89
12	144
13	233
14	377
15	610
16	987
17	1597
18	2584
19	4181
20	6765


/**
 * Title: Prose 
 * Author: William Walter
 * Date: 10/26/2016
 * Purpose: Take a string or prose and upcase the first character of each word.
 * count the number of words
 * */
#include <stdio.h>
int is_char(char c);
int is_blank(char c);
void cap(char *prose);
int count(char *prose);
int main()
{
  char input[1000] = "This is a test of my thing. ? I need to worry about.";
  printf("%s\n", input);
  cap(input);
  printf("%s\n", input);
  printf("There are %d words in the input, assuming there is no errant punctuation.\n", count(input));
}

int is_char(char c)
{
  return (((c) >= 'A' && (c) <= 'Z') || ((c) >= 'a' && (c) <= 'z') ? 1:0 );
}
int is_blank(char c)
{
  return (((c) == '\t' || (c) == ' ') ? 1:0);
}
void cap(char *prose)
{
  int in_word = 0;
  while( *prose != '\0')
  {
    if( is_char(*prose))
    {
      if(in_word == 0)
      { 
        in_word = 1;
        if (*prose > 'Z')
          *prose -= 32;
      }
      else
        ++prose;
        continue;
    }
    else if( is_blank(*prose))
    {
      in_word = 0;
    } 
    ++prose;
  }
}
int count(char *prose)
{
  int in_word = 0, count = 0;
  while ( *prose != '\0')
  {
    if( !is_blank(*prose) && !in_word)
    {
      ++count;
      in_word = 1;
    }
    if( is_blank(*prose))
      in_word = 0;
    ++prose;
  }
  return count;
}
The sum of the first 10 fibonnaci numbers is: 17710
This is a test of my thing. ? I need to worry about.
This Is A Test Of My Thing. ? I Need To Worry About.
There are 13 words in the input, assuming there is no errant punctuation.
